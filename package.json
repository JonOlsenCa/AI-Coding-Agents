{
  "name": "ai-coding-agents",
  "displayName": "AI Coding Agents",
  "description": "Specialized AI coding agents for different development roles",
  "version": "1.0.2",
  "publisher": "jonolsenca",
  "author": {
    "name": "Jon Olsen"
  },
  "license": "MIT",
  "icon": "media/icon.png",
  "preview": true,
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Programming Languages"
  ],
  "keywords": [
    "ai",
    "agents",
    "copilot",
    "coding",
    "assistant",
    "code generation",
    "productivity",
    "language model",
    "gpt",
    "chat"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/JonOlsenCa/AI-Coding-Agents"
  },
  "homepage": "https://github.com/JonOlsenCa/AI-Coding-Agents/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/JonOlsenCa/AI-Coding-Agents/issues"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./extension.js",
  "contributes": {
    "commands": [
      {
        "command": "aiAgents.list",
        "title": "AI Agents: Select an Agent",
        "icon": "$(hubot)"
      },
      {
        "command": "aiAgents.clearMemory",
        "title": "AI Agents: Clear Agent Memory",
        "icon": "$(clear-all)"
      },
      {
        "command": "aiAgents.openPanel",
        "title": "AI Agents: Open Agent Panel",
        "icon": "$(window)"
      },
      {
        "command": "aiAgents.architectureGuardian",
        "title": "AI Agents: Architecture Guardian"
      },
      {
        "command": "aiAgents.databaseSpecialist",
        "title": "AI Agents: Database Specialist"
      },
      {
        "command": "aiAgents.backendDeveloper",
        "title": "AI Agents: Backend Developer"
      },
      {
        "command": "aiAgents.frontendDeveloper",
        "title": "AI Agents: Frontend Developer"
      },
      {
        "command": "aiAgents.aiIntegrationEngineer",
        "title": "AI Agents: AI Integration Engineer"
      },
      {
        "command": "aiAgents.fullStackDebugger",
        "title": "AI Agents: Full-Stack Debugger"
      },
      {
        "command": "aiAgents.codeReviewer",
        "title": "AI Agents: Code Reviewer"
      },
      {
        "command": "aiAgents.testingStrategist",
        "title": "AI Agents: Testing Strategist"
      },
      {
        "command": "aiAgents.pythonDataProcessor",
        "title": "AI Agents: Python Data Processor"
      },
      {
        "command": "aiAgents.devOpsEngineer",
        "title": "AI Agents: DevOps Engineer"
      },
      {
        "command": "aiAgents.showWelcome",
        "title": "AI Agents: Show Welcome Page",
        "icon": "$(info)"
      },
      {
        "command": "aiAgents.editPrompt",
        "title": "AI Agents: Edit Agent Prompt",
        "icon": "$(edit)"
      },
      {
        "command": "aiAgents.resetPrompt",
        "title": "AI Agents: Reset Agent Prompt to Default",
        "icon": "$(discard)"
      },
      {
        "command": "aiAgents.showHistory",
        "title": "AI Agents: Show Conversation History",
        "icon": "$(history)"
      },
      {
        "command": "aiAgents.clearAllHistory",
        "title": "AI Agents: Clear All Conversation History",
        "icon": "$(trash)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "aiAgents",
          "title": "AI Coding Agents",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "aiAgents": [
        {
          "id": "aiAgents.sidebar",
          "name": "Available Agents",
          "type": "webview",
          "icon": "hubot"
        }
      ]
    },
    "configuration": {
      "title": "AI Coding Agents",
      "properties": {
        "aiAgents.useWebviewPanel": {
          "type": "boolean",
          "default": true,
          "description": "Use webview panel for agent interactions instead of output channel"
        },
        "aiAgents.includeWorkspaceContext": {
          "type": "boolean",
          "default": true,
          "description": "Include workspace context information in agent prompts"
        },
        "aiAgents.maxConversationHistory": {
          "type": "number",
          "default": 50,
          "description": "Maximum number of conversation entries to keep in memory"
        },
        "aiAgents.maxStoredConversations": {
          "type": "number",
          "default": 500,
          "description": "Maximum number of conversation entries to keep in storage"
        },
        "aiAgents.enableCodeGeneration": {
          "type": "boolean",
          "default": true,
          "description": "Enable code generation capabilities for agents"
        },
        "aiAgents.defaultLanguage": {
          "type": "string",
          "default": "javascript",
          "enum": [
            "javascript",
            "typescript",
            "python",
            "csharp",
            "java",
            "html",
            "css"
          ],
          "description": "Default language for code generation when not specified"
        },
        "aiAgents.showWelcomeOnStartup": {
          "type": "boolean",
          "default": true,
          "description": "Show welcome page when the extension is activated for the first time"
        },
        "aiAgents.hasShownWelcome": {
          "type": "boolean",
          "default": false,
          "description": "Internal setting to track if welcome page has been shown",
          "scope": "machine"
        },
        "aiAgents.useCustomPrompts": {
          "type": "boolean",
          "default": true,
          "description": "Use custom prompts when available instead of default prompts"
        }
      }
    }
  },
  "capabilities": {
    "languageModels": {
      "version": "1.0.0"
    }
  },
  "scripts": {
    "test": "node ./test/runTest.js",
    "watch": "webpack --watch --mode development",
    "package": "vsce package",
    "publish": "vsce publish",
    "vscode:prepublish": "webpack --mode production",
    "deploy": "vsce publish --yarn"
  },
  "devDependencies": {
    "@babel/core": "^7.27.1",
    "@babel/preset-env": "^7.27.2",
    "@vscode/test-electron": "^2.3.8",
    "babel-loader": "^10.0.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  }
}
